<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Bukkit#1</title>
    <url>/2021/08/03/Bukkit-1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<h1 id="插件开发第一期"><a href="#插件开发第一期" class="headerlink" title="插件开发第一期"></a>插件开发第一期</h1></blockquote>
<span id="more"></span>
<blockquote>
<h2 id="Bilibili专栏-点击前往"><a href="#Bilibili专栏-点击前往" class="headerlink" title="Bilibili专栏 [点击前往]"></a>Bilibili专栏 <a href="https://www.bilibili.com/read/cv12317336">[点击前往]</a></h2></blockquote>
<h2 id="本期分为五个步骤"><a href="#本期分为五个步骤" class="headerlink" title="本期分为五个步骤:"></a>本期分为五个步骤:</h2><pre><code>1. 安装JDK (推荐版本8)
2. 修改JAVA路径
3. 安装编程工具IDEA
4. 安装完成IDEA之后下载插件
5. 创建一个新的项目 
</code></pre>
<hr>
<h3 id="第一步-下载JDK-点击前往"><a href="#第一步-下载JDK-点击前往" class="headerlink" title="第一步 下载JDK [点击前往]"></a>第一步 下载JDK <a href="https://adoptopenjdk.net/releases.html?variant=openjdk8&jvmVariant=hotspot">[点击前往]</a></h3><ul>
<li>选择JDK8版本</li>
<li>进行下载并安装</li>
</ul>
<hr>
<h3 id="第二步-更改JAVA路径"><a href="#第二步-更改JAVA路径" class="headerlink" title="第二步 更改JAVA路径"></a>第二步 更改JAVA路径</h3><ul>
<li>右键我的电脑属性 -&gt; 高级系统设置 -&gt; 高级 -&gt; 环境变量 </li>
<li>然后在环境变量的系统变量内新建一个 JAVA_HOME</li>
<li>编辑 JAVA_HOME 放入安装JDK的位置</li>
<li>设置完成关闭,在系统变量内找到Path编辑 增加 %JAVA_HOME%\bin 放到第一个位置</li>
<li>接着保存,打开 CMD 输入 java -version 如果显示版本就已经完成了</li>
</ul>
<hr>
<h3 id="第三步-下载IDEA-点击前往"><a href="#第三步-下载IDEA-点击前往" class="headerlink" title="第三步 下载IDEA [点击前往]"></a>第三步 下载IDEA <a href="https://www.jetbrains.com/idea/">[点击前往]</a></h3><ul>
<li>IDEA官网 (百度搜索IDEA进入官网)</li>
<li>点击 Download 下载 右边社区版(免费) 有条件的可以去购买付费版</li>
<li>下载完安装</li>
<li>选择安装路径和设置</li>
</ul>
<hr>
<h3 id="第四步-打开IDEA"><a href="#第四步-打开IDEA" class="headerlink" title="第四步 打开IDEA"></a>第四步 打开IDEA</h3><ul>
<li>进入 Setting 设置内有个 Plugins (插件)</li>
<li>搜索 Chinese 下载中文语言</li>
<li>再搜索 Minecraft Development 下载安装</li>
</ul>
<hr>
<h3 id="第五步-创建一个新项目"><a href="#第五步-创建一个新项目" class="headerlink" title="第五步 创建一个新项目"></a>第五步 创建一个新项目</h3><ul>
<li>选择左侧的 Minecraft 并再右上角添加JDK的路径</li>
<li>选择 spigot 插件进行下一步<br><img src="/images/1.png" alt="1"><br><img src="/images/2.png" alt="2"><br><img src="/images/3.png" alt="3"></li>
<li>完成之后将会创建一个项目</li>
<li>第一次使用需要等待右下角下载完成<br><img src="/images/%E4%B8%BB%E7%B1%BB.png" alt="主类"></li>
<li>左上角 src -&gt; main -&gt; java -&gt; 包名 -&gt; 主类</li>
<li>现在已经成功创建完一个项目</li>
<li><strong>我会在下一期讲解如何去写一个mc的事件并讲解各个部分</strong></li>
</ul>
<hr>
]]></content>
      <categories>
        <category>Minecraft</category>
        <category>Bukkit</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>Minecraft</tag>
        <tag>Bukkit</tag>
      </tags>
  </entry>
  <entry>
    <title>Bukkit#2</title>
    <url>/2021/08/03/Bukkit-2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<h1 id="Minecraft-插件开发第二期"><a href="#Minecraft-插件开发第二期" class="headerlink" title="Minecraft 插件开发第二期"></a>Minecraft 插件开发第二期</h1></blockquote>
<span id="more"></span>
<blockquote>
<h2 id="Bilibili专栏"><a href="#Bilibili专栏" class="headerlink" title="Bilibili专栏"></a><a href="https://www.bilibili.com/read/cv12317336">Bilibili专栏</a></h2></blockquote>
<blockquote>
<h2 id="本期分为二个步骤"><a href="#本期分为二个步骤" class="headerlink" title="本期分为二个步骤:"></a>本期分为二个步骤:</h2></blockquote>
<ul>
<li>了解主类内容</li>
<li>创建一个事件并使用</li>
</ul>
<blockquote>
<h3 id="了解主类内容"><a href="#了解主类内容" class="headerlink" title="了解主类内容"></a>了解主类内容</h3></blockquote>
<ul>
<li>继承上一次的步骤创建完项目之后</li>
<li>我们需要打开 左上角 src -&gt; main -&gt; java -&gt; 包名 -&gt; 主类 </li>
<li>主类是你创建的名称</li>
<li>打开我们的主类可以看到</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">public void onEnable() &#123; // 插件开启时执行</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void onDisable() &#123; // 插件关闭时执行</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>首先我将教大家可以更加醒目的从控制台上看到自己的插件启用和关闭</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">public void onEnable() &#123;</span><br><span class="line">getLogger().info(&quot;插件已经启用&quot;); // 开启时执行的信息</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void onDisable() &#123;</span><br><span class="line">getLogger().info(&quot;插件已经卸载&quot;); // 关闭时执行的信息</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>非常的简单,这样就能自定义提示信息,不过这样还有点不明显,我们需要让字变成彩色</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">public void onEnable() &#123;</span><br><span class="line">getLogger().info(ChatColor.AQUA + &quot;插件已经启用&quot;); // 开启时执行的信息是青蓝色的</span><br><span class="line">getLogger().info(&quot;§b插件已经启用&quot;); // 开启时执行的信息是青蓝色的</span><br><span class="line">// 当然 你不能写两个上去 只能选一种方式</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void onDisable() &#123;</span><br><span class="line">getLogger().info(ChatColor.RED + &quot;插件已经卸载&quot;); // 关闭时执行的信息是红色的</span><br><span class="line">getLogger().info(&quot;§4插件已经卸载&quot;); // 关闭时执行的信息是红色的</span><br><span class="line">// 当然 你不能写两个上去 只能选一种方式</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>在前面加上 ChatColor.AQUA 或者 使用 § 颜色符号 都可以使后面的字体变换颜色</li>
<li>如果想要使用 &amp; 符号 代替 § 符号也是可以的,我会在后面的教程告诉大家<h3 id="创建事件"><a href="#创建事件" class="headerlink" title="创建事件"></a>创建事件</h3></li>
<li>事件是某某某执行或者触发了一个事情,然后触发一系列的事件(需要我们玩家自己写)</li>
<li>接下来我们需要再创建一个 java类 存放我们的事件 (event)</li>
<li>右键 我们主类上面的包名称 新建一个java类 名称取: PluginEvent(只要不重复名称随便取)<br><img src="/images/%E6%96%B0%E5%BB%BA.png" alt="新建"></li>
<li>完成之后 我们需要让这个类 接上事件 Listener (事件必须加)</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class PluginEvent implements Listener &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>接下来创建一个事件</li>
<li>我拿阻止苦力怕爆炸来作为演示</li>
<li>首先我们需要知道苦力怕爆炸这个事件叫什么</li>
<li>我在这里分享一个事件网址 <a href="https://hub.spigotmc.org/javadocs/spigot/index.html">点击前往</a></li>
<li>我在下面找到了 org.bukkit.event.entity 这是调用实体的一些事件</li>
<li>里面就有实体爆炸事件 EntityExplodeEvent</li>
<li>我们将 EntityExplodeEvent 放入我们的类里</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class PluginEvent implements Listener &#123;</span><br><span class="line"></span><br><span class="line">    @EventHandler // 千万不要漏写 不然事件不执行</span><br><span class="line">    public static void EEE(EntityExplodeEvent event)&#123; // 这是一个实体爆炸的事件 需要导入我们的事件</span><br><span class="line">        // 填写我们的内容</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>接下来我们需要在事件内部写上我们的想法</li>
<li>首先需要是苦力怕,然后让它爆炸之后返回</li>
<li>这样就不会炸毁方块了</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@EventHandler // 千万不要漏写 不然事件不执行</span><br><span class="line">public static void EEE(EntityExplodeEvent event)&#123; // 思路: 如果是苦力怕返回爆炸之前</span><br><span class="line">    if (event.getEntityType() == EntityType.CREEPER)&#123; // 如果我们的生物类型是苦力怕</span><br><span class="line">        event.setCancelled(true); // true确定返回</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>接下来我们需要返回主类</li>
<li>在onEnable内加入 getServer().getPluginManager().registerEvents(new PluginEvent(),this);</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">public void onEnable() &#123;</span><br><span class="line">    getLogger().info(ChatColor.AQUA + &quot;插件已经启用&quot;); // 开启时执行的信息是青蓝色的</span><br><span class="line">    getServer().getPluginManager().registerEvents(new PluginEvent(),this); // 注册一个事件类PluginEvent 位置是事件类的名称</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>然后我们点击右上角的绿色箭头运行</li>
<li>idea会将我们的插件放入左侧 target文件夹里<br><img src="/images/target.png" alt="target"></li>
<li>右键我们的插件 打开于Explorer 自动开启所在位置</li>
<li>然后将插件拖入服务器插件文件夹并启动服务器</li>
<li>开启之后会显示我们刚才写的<br><img src="/images/onEnable.png" alt="onEnable"></li>
<li>当然关闭也是会显示的</li>
<li>接下来进服务器苦力怕它就不会爆炸了</li>
</ul>
<blockquote>
<h3 id="本期事件的教程到此结束-大家可以试试别的事件"><a href="#本期事件的教程到此结束-大家可以试试别的事件" class="headerlink" title="本期事件的教程到此结束 大家可以试试别的事件"></a>本期事件的教程到此结束 大家可以试试别的事件</h3></blockquote>
<ul>
<li><strong>我会再出更多教程</strong></li>
</ul>
<blockquote>
<h3 id="下一期教大家如何写一个指令并执行"><a href="#下一期教大家如何写一个指令并执行" class="headerlink" title="下一期教大家如何写一个指令并执行"></a>下一期教大家如何写一个指令并执行</h3></blockquote>
<hr>
]]></content>
      <categories>
        <category>Minecraft</category>
        <category>Bukkit</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>Minecraft</tag>
        <tag>Bukkit</tag>
      </tags>
  </entry>
  <entry>
    <title>NexT美化</title>
    <url>/2021/08/03/NexT%E7%BE%8E%E5%8C%96/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<h1 id="本站美化教程"><a href="#本站美化教程" class="headerlink" title="本站美化教程"></a>本站美化教程</h1></blockquote>
<span id="more"></span>

<blockquote>
<h3 id="记录鼠标点击特效"><a href="#记录鼠标点击特效" class="headerlink" title="记录鼠标点击特效"></a>记录鼠标点击特效</h3></blockquote>
<ul>
<li>礼花JS <a href="blog.candoanythin.top/2021/08/03/%E7%A4%BC%E8%8A%B1js/#more">点击前往</a></li>
</ul>
<blockquote>
<h3 id="存放位置-themes-next-source-js-cursor-fireworks-js"><a href="#存放位置-themes-next-source-js-cursor-fireworks-js" class="headerlink" title="存放位置 - themes\next\source\js\cursor\fireworks.js"></a>存放位置 - themes\next\source\js\cursor\fireworks.js</h3></blockquote>
<ul>
<li>如果js内无cursor文件夹 手动创建一个 再创建一个fireworks.js</li>
<li>将礼花JS 内容复制进去</li>
</ul>
<blockquote>
<h3 id="粒子漂浮背景-由theme-next-canvas-nest提供"><a href="#粒子漂浮背景-由theme-next-canvas-nest提供" class="headerlink" title="粒子漂浮背景 由theme-next-canvas-nest提供"></a>粒子漂浮背景 由<a href="https://github.com/theme-next/theme-next-canvas-nest">theme-next-canvas-nest</a>提供</h3></blockquote>
<ul>
<li>hexo/source/_data 内创建一个 footer.swig (如果没_data 创建一个)</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script color=&quot;0,0,255&quot; opacity=&quot;0.5&quot; zIndex=&quot;-1&quot; count=&quot;99&quot; src=&quot;https://cdn.jsdelivr.net/npm/canvas-nest.js@1/dist/canvas-nest.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>将代码放入 footer.swig 保存</li>
<li>前往 NexT 主题 _config.yml 文件内 找到 custom_file_path: </li>
<li>将 footer: source/_data/footer.swig 启用即可</li>
</ul>
<blockquote>
<h3 id="增加文章页尾结束语"><a href="#增加文章页尾结束语" class="headerlink" title="增加文章页尾结束语"></a>增加文章页尾结束语</h3></blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">================在下方位置添加如下代码================</span><br><span class="line">位置: themes\next\layout\_macro\post-end-tag.swig 没有则创建一个</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &lt;div style=&quot;text-align:center;color:#bfbfbf;font-size:16px;&quot;&gt;</span><br><span class="line">      &lt;span&gt;-------- 文章结束 &lt;/span&gt;</span><br><span class="line">      &lt;i class=&quot;fa fa-&#123;&#123; config.post_end_tag.icon &#125;&#125;&quot;&gt;&lt;/i&gt;</span><br><span class="line">      &lt;span&gt; 感谢阅读 --------&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">================在下方位置添加如下代码================</span><br><span class="line">位置: themes\next\layout\_macro\post</span><br><span class="line">&#123;#####################&#125;</span><br><span class="line">&#123;### END POST BODY ###&#125;</span><br><span class="line">&#123;#####################&#125;</span><br><span class="line"></span><br><span class="line"> &#123;% if config.post_end_tag.enabled and not is_index %&#125;</span><br><span class="line">   &lt;div&gt;</span><br><span class="line">     &#123;% include &#x27;post-end-tag.swig&#x27; %&#125;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line"> &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>主题</category>
      </categories>
      <tags>
        <tag>NexT</tag>
        <tag>主题</tag>
        <tag>美化</tag>
      </tags>
  </entry>
  <entry>
    <title>礼花js</title>
    <url>/2021/08/03/%E7%A4%BC%E8%8A%B1js/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<h1 id="礼花js"><a href="#礼花js" class="headerlink" title="礼花js"></a>礼花js</h1></blockquote>
<span id="more"></span>

<blockquote>
<h3 id="右侧复制"><a href="#右侧复制" class="headerlink" title="右侧复制"></a>右侧复制</h3></blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class Circle &#123;</span><br><span class="line">  constructor(&#123; origin, speed, color, angle, context &#125;) &#123;</span><br><span class="line">    this.origin = origin</span><br><span class="line">    this.position = &#123; ...this.origin &#125;</span><br><span class="line">    this.color = color</span><br><span class="line">    this.speed = speed</span><br><span class="line">    this.angle = angle</span><br><span class="line">    this.context = context</span><br><span class="line">    this.renderCount = 0</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  draw() &#123;</span><br><span class="line">    this.context.fillStyle = this.color</span><br><span class="line">    this.context.beginPath()</span><br><span class="line">    this.context.arc(this.position.x, this.position.y, 2, 0, Math.PI * 2)</span><br><span class="line">    this.context.fill()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  move() &#123;</span><br><span class="line">    this.position.x = (Math.sin(this.angle) * this.speed) + this.position.x</span><br><span class="line">    this.position.y = (Math.cos(this.angle) * this.speed) + this.position.y + (this.renderCount * 0.3)</span><br><span class="line">    this.renderCount++</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Boom &#123;</span><br><span class="line">  constructor (&#123; origin, context, circleCount = 16, area &#125;) &#123;</span><br><span class="line">    this.origin = origin</span><br><span class="line">    this.context = context</span><br><span class="line">    this.circleCount = circleCount</span><br><span class="line">    this.area = area</span><br><span class="line">    this.stop = false</span><br><span class="line">    this.circles = []</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  randomArray(range) &#123;</span><br><span class="line">    const length = range.length</span><br><span class="line">    const randomIndex = Math.floor(length * Math.random())</span><br><span class="line">    return range[randomIndex]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  randomColor() &#123;</span><br><span class="line">    const range = [&#x27;8&#x27;, &#x27;9&#x27;, &#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;D&#x27;, &#x27;E&#x27;, &#x27;F&#x27;]</span><br><span class="line">    return &#x27;#&#x27; + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  randomRange(start, end) &#123;</span><br><span class="line">    return (end - start) * Math.random() + start</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  init() &#123;</span><br><span class="line">    for(let i = 0; i &lt; this.circleCount; i++) &#123;</span><br><span class="line">      const circle = new Circle(&#123;</span><br><span class="line">        context: this.context,</span><br><span class="line">        origin: this.origin,</span><br><span class="line">        color: this.randomColor(),</span><br><span class="line">        angle: this.randomRange(Math.PI - 1, Math.PI + 1),</span><br><span class="line">        speed: this.randomRange(1, 6)</span><br><span class="line">      &#125;)</span><br><span class="line">      this.circles.push(circle)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  move() &#123;</span><br><span class="line">    this.circles.forEach((circle, index) =&gt; &#123;</span><br><span class="line">      if (circle.position.x &gt; this.area.width || circle.position.y &gt; this.area.height) &#123;</span><br><span class="line">        return this.circles.splice(index, 1)</span><br><span class="line">      &#125;</span><br><span class="line">      circle.move()</span><br><span class="line">    &#125;)</span><br><span class="line">    if (this.circles.length == 0) &#123;</span><br><span class="line">      this.stop = true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  draw() &#123;</span><br><span class="line">    this.circles.forEach(circle =&gt; circle.draw())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class CursorSpecialEffects &#123;</span><br><span class="line">  constructor() &#123;</span><br><span class="line">    this.computerCanvas = document.createElement(&#x27;canvas&#x27;)</span><br><span class="line">    this.renderCanvas = document.createElement(&#x27;canvas&#x27;)</span><br><span class="line"></span><br><span class="line">    this.computerContext = this.computerCanvas.getContext(&#x27;2d&#x27;)</span><br><span class="line">    this.renderContext = this.renderCanvas.getContext(&#x27;2d&#x27;)</span><br><span class="line"></span><br><span class="line">    this.globalWidth = window.innerWidth</span><br><span class="line">    this.globalHeight = window.innerHeight</span><br><span class="line"></span><br><span class="line">    this.booms = []</span><br><span class="line">    this.running = false</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handleMouseDown(e) &#123;</span><br><span class="line">    const boom = new Boom(&#123;</span><br><span class="line">      origin: &#123; x: e.clientX, y: e.clientY &#125;,</span><br><span class="line">      context: this.computerContext,</span><br><span class="line">      area: &#123;</span><br><span class="line">        width: this.globalWidth,</span><br><span class="line">        height: this.globalHeight</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    boom.init()</span><br><span class="line">    this.booms.push(boom)</span><br><span class="line">    this.running || this.run()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handlePageHide() &#123;</span><br><span class="line">    this.booms = []</span><br><span class="line">    this.running = false</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  init() &#123;</span><br><span class="line">    const style = this.renderCanvas.style</span><br><span class="line">    style.position = &#x27;fixed&#x27;</span><br><span class="line">    style.top = style.left = 0</span><br><span class="line">    style.zIndex = &#x27;999999999999999999999999999999999999999999&#x27;</span><br><span class="line">    style.pointerEvents = &#x27;none&#x27;</span><br><span class="line"></span><br><span class="line">    style.width = this.renderCanvas.width = this.computerCanvas.width = this.globalWidth</span><br><span class="line">    style.height = this.renderCanvas.height = this.computerCanvas.height = this.globalHeight</span><br><span class="line"></span><br><span class="line">    document.body.append(this.renderCanvas)</span><br><span class="line"></span><br><span class="line">    window.addEventListener(&#x27;mousedown&#x27;, this.handleMouseDown.bind(this))</span><br><span class="line">    window.addEventListener(&#x27;pagehide&#x27;, this.handlePageHide.bind(this))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  run() &#123;</span><br><span class="line">    this.running = true</span><br><span class="line">    if (this.booms.length == 0) &#123;</span><br><span class="line">      return this.running = false</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    requestAnimationFrame(this.run.bind(this))</span><br><span class="line"></span><br><span class="line">    this.computerContext.clearRect(0, 0, this.globalWidth, this.globalHeight)</span><br><span class="line">    this.renderContext.clearRect(0, 0, this.globalWidth, this.globalHeight)</span><br><span class="line"></span><br><span class="line">    this.booms.forEach((boom, index) =&gt; &#123;</span><br><span class="line">      if (boom.stop) &#123;</span><br><span class="line">        return this.booms.splice(index, 1)</span><br><span class="line">      &#125;</span><br><span class="line">      boom.move()</span><br><span class="line">      boom.draw()</span><br><span class="line">    &#125;)</span><br><span class="line">    this.renderContext.drawImage(this.computerCanvas, 0, 0, this.globalWidth, this.globalHeight)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const cursorSpecialEffects = new CursorSpecialEffects()</span><br><span class="line">cursorSpecialEffects.init()</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>主题</category>
      </categories>
      <tags>
        <tag>NexT</tag>
        <tag>主题</tag>
        <tag>美化</tag>
      </tags>
  </entry>
</search>
